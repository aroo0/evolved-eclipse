---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Tag from '../components/Tag.astro';
import RelatedPosts from '../components/RelatedPosts.astro'
import Subscribe from '../components/SubscribeComponent.astro';
import { Image } from 'astro:assets';


type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, coverImage, coverAlt, tags } = Astro.props;
const url = Astro.url


// Related Posts

const allPosts = await getCollection('blog');

const relatedPosts = allPosts.filter(post => {
  return tags.some(tag => post.data.tags.includes(tag)) && (post.data.title !== title) && (post.data.isDraft !== true) ;
});

const isThereRelated = relatedPosts.length > 0 


---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} image={coverImage} />
	</head>
	<body>
		<div>
		<Header />
		<main>
			<div class="cover-image">
			<div class="image-wrapper">
				<Image  data-pagefind-meta="image[src], image_alt[alt]" src={coverImage} alt={coverAlt} width='1400' height='800'>
			</div>
			
		</div>
		
			<article>
				
				<div class='tags' data-pagefind-ignore>
					{
					tags.map(tag => (
						<Tag tag={tag} colorClass='white' />
					))}
				</div>
				<span class='date' data-pagefind-ignore><FormattedDate date={pubDate} /></span>
				<h1 class="headline" >{title}</h1>
				<div class="share-links-container" data-pagefind-ignore>
					<span class="share-headline">Share</span>
					<span class="share-link"><a href={`https://twitter.com/intent/tweet?text=${url}`} target='_blank'>Twitter</a></span>
					<span class="share-link"><a href={`https://www.facebook.com/sharer/sharer.php?u=${url}`} target='_blank'>Facebook</a></span>
					<span class="share-link" id="copy">Copy link</span>

					<script>
						const button = document.getElementById('copy');
						const url = window.location.href;
					
						button.onclick = () => {
						  navigator.clipboard.writeText(url);
						  button.style.color = 'gray';
							setTimeout(() => {
								button.style.color = '';
							}, 600);
							};
					
					  </script>
				</div>
				<hr class='separator--long' />
				<span class='description'>{description}</span>
				<hr class='separator--short'>
				<div class='article-content'>
					<slot />
				</div>
			</article>
			<aside data-pagefind-ignore>
{ isThereRelated &&	<div class='related-posts-container'>

					<RelatedPosts relatedPosts ={relatedPosts}/>

				</div>}
			<div class='subscribe-container'>
				<Subscribe />
			</div>
			</aside>
		</main>
		
		<Footer />
	</div>
	<div class="middle-image-container">
	</div>
	<div class="bottom-image-container">
		<script defer>
			window.addEventListener('DOMContentLoaded', function() {
  			const targetElement = document.querySelector('.bottom-image-container'); 
			function checkBodyWidth() {
				const bodyHeight = document.body.clientHeight;
				
				if (bodyHeight < 3200) {
				targetElement.style.display = 'none';

				} else {
				targetElement.style.display = 'absolute';
				}
			}

			checkBodyWidth(); // Check on page load

			window.addEventListener('resize', function() {
				checkBodyWidth(); // Check on window resize
			});
			});``
		</script>
	</div>
	</body>
</html>


<style>

:root {
	--light: #ffffff;
	--dark: #000000;
	--gray: #8c8c8c;
  }
  
.cover-image {
	position:sticky;
	top: 0;
	display: grid;
	grid-template-columns: repeat(16, 1fr);
	width: 100%;
	z-index: -3;





	
	& .image-wrapper {
		grid-area: 1 / 3 / span 1 / 15;
		display: flex;
		height: 480px;
		margin: auto;
		overflow: hidden;
		align-items: center;
		justify-content: center;
		width: 100%;


		@media (max-width: 1200px) {
			& {
				height: 400px;
			}

		}

		@media (max-width: 1000px) {
			& {
				grid-area: 1 / 1 / span 1 / 17;
				
			}

		}

		@media (max-width: 800px) {
			& {
				height: 300px;
			}

		}

		@media (max-width: 500px) {
			& {
				height: 200px;
			}

		}



		& img {
			
			height: auto; /* Ensure the image covers the full height of the container */
			width: 150%; /* Allow the image to adjust its width proportionally */	
			z-index: -3;


			

		}
	} 
}

article {
    position: relative;
	display: grid;
	grid-template-columns: repeat(16, 1fr);
	grid-template-rows: auto;
	grid-auto-flow: row;
	align-content: center;
	grid-gap: .2rem 2rem;
	background: var(--light);
	padding-bottom: 5rem;
	z-index: 0;


		& .tags {
			grid-area: 1 / 3 / span 1 / 12;
			margin: clamp(.5rem, .5vw, 1rem) 0

		}

		& .date {
			grid-area: 2 / 3 / span 1 / 12
		}


		& .headline {
			grid-area: 3 / 3 / span 1 / 12;

			display: grid;
			align-self: center;
		}

		& .share-links-container {
			grid-area: 3 / 12 / span 1 / 15;
			display: grid;
			align-self: center;

			& .share-headline {
				font-size: clamp(.6rem, 1.2vw, .75rem);
				margin-bottom: .2rem;
				
			}

			& .share-link {

				font-family: 'Lora', 'Times New Roman', Times, serif;
				font-size: clamp(.9rem, 1.4vw, 1.1rem);
				line-height: 139%;
				cursor: pointer;
				

				& a {
					text-decoration: none;
				}
			}
		}

		& .separator--long {
			grid-area: 4 / 3 / span 1 / 15;
			margin-top: clamp(.8rem, 1vw, 2rem)
		}

		& .description {
			grid-area: 5/ 3 / span 1 / 14;
			font-size: clamp(1.05rem, .8vw, 1.4rem);
			margin: clamp(.8rem, 1.2vw, 2rem) 0;
		}

		& .separator--short {
			grid-area: 6 / 3 / span 1 / span 2;
			margin: 1rem 0
		}

		& .article-content {
			grid-area: 6 / 5 / span 2 / 12;
			line-height: 1.6;

		}

		
		@media (max-width: 1200px) {

			
		& .headline {
			grid-area: 3 / 3 / span 1 / 13;
		}

		& .share-links-container {
			grid-area: 3 / 13 / span 1 / 16;
		}


			& .separator--short {
			grid-area: 6 / 3 / span 1 / span 2;
		}

			& .article-content {
			grid-area: 6 / 5 / span 2 / 13;
		}


		}


		@media (max-width: 1000px) {

		& {
			padding: .4rem 2rem 2rem;
		}
			& .tags {
			grid-area: 1 / 1 / span 1 / 17;
		}
		& .date {
			grid-area: 2 / 1 / span 1 / 17
		}

		& .headline {
			grid-area: 3 / 1 / span 1 / 14;
		}

		& .share-links-container {
			grid-area: 3 / 14 / span 1 / 16;
		}

		& .separator--long {
			grid-area: 4 / 1 / span 1 / 17;
		}

		& .description {
			grid-area: 5 / 1 / span 1 / 17;
		}

		& .separator--short {
			grid-area: 6 / 1 / span 1 / span 3;
		}

		& .article-content {
			grid-area: 6 / 4 / span 2 / 13;

		}

		}

		@media (max-width: 800px) {

		& .headline {
			grid-area: 3 / 1 / span 1 / 14;
		}

		& .share-links-container {
			grid-area: 3 / 14 / span 1 / 16;
		}


		& .separator--short {
			grid-area: 6 / 1 / span 1 / span 2;
		}
			
		& .article-content {
			grid-area: 6 / 3 / span 2 / 15;

		}

		}

		@media (max-width: 600px) {
			& {
				gap: .4rem;
				padding: .4rem 1rem 2rem;
				}

		& .headline {
			grid-area: 3 / 1 / span 1 / 17;
		}

		& .share-links-container {
			grid-area: 4 / 1 / span 1 / 17;
			margin-top: .5rem;
			display: flex;
			flex-wrap: wrap;
			gap: .5rem
		}

		& .separator--long {
			grid-area: 5 / 1 / span 1 / 17;
		}

		& .description {
			grid-area: 6 / 1 / span 1 / 17;
		}

		& .separator--short {
			grid-area: 7 / 1 / span 1 / 4;

		}

		& .article-content {
			grid-area: 8 / 1 / span 2 / 17;

		}

		}




}




aside {
	display: grid;
	grid-template-rows: auto;
	grid-auto-flow: row;
	grid-template-columns: repeat(16, 1fr);
	background-color: #fff;
	padding-bottom: clamp(1rem, 2vw, 4rem);


	& .related-posts-container {
		grid-area: 1 / 3 / span 1 / 15;
		padding-bottom: clamp(3rem, 6vw, 8rem);

	}


	& .subscribe-container {
		grid-area: 2 / 3 / span 1 / 15;

	}

	
	@media (max-width: 800px) {

		& {
			padding-left: 3rem;
			padding-right: 3rem;

		}



		& .related-posts-container {
			grid-area: 1 / 1 / span 1 / 17;

		}

		& .subscribe-container {
		grid-area: 2 / 1 / span 1 / 17;

	}
	}

	@media (max-width: 600px) {

		& {
			padding-left: 1rem;
			padding-right: 1rem;

		}
	}
}


.see-all-text {
		display: flex;
		justify-content: flex-end;
		white-space: nowrap;
	}




	
	.bottom-image-container {
		position: absolute;
		bottom: 0;
		left: 0;
		z-index: 100;
		background-image: url('/bottom-tower-min.png');
		width: 411px;
		height: 1368px;

	}


	/*  Graphics */

	.middle-image-container {
		position: absolute;
		top: 33rem;
		left: 0;
		z-index: 100;
		background-image: url('/MiddleTower-min.png');
		width: 300px;
		height: 1658px;

	}

	@media (max-width: 1700px) {
			.middle-image-container,
			.bottom-image-container{
				left: -80px;
			}

			.bottom-image-container {
				rotate: 4deg;
			}
		}


	@media (max-width: 1500px) {
			.middle-image-container,
			.bottom-image-container {
				left: -90px;
			}

			.bottom-image-container {
				rotate: 4deg;
			}
		}

		
	@media (max-width: 1204px) {
			.middle-image-container,
			.bottom-image-container {
				left: -140px;
			}


		}

	@media (max-width: 1000px) {
			.middle-image-container,
			.bottom-image-container {
				display: none;
			}
		}



	





</style>
