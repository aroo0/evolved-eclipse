---
import { getCollection } from 'astro:content';
import Page from '../../layouts/Page.astro';
import PostTable from '../../components/reactComponents/PostTable';
import PageFind from '../../components/PageFind.astro';


const posts = (await getCollection('blog', ({ data }) => {
  return data.isDraft !== true; })).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

interface Post {
  slug: string;
  data: {
    title: string;
    tags: string[];
    pubDate: Date;
  };
}

const filteredPosts: Post[] = posts.map(post => {
  const filteredPost: Post = {
    slug: post.slug,
    data: {
      title: post.data.title,
      tags: post.data.tags,
      pubDate: post.data.pubDate
    }
  };
  return filteredPost;
});

const metaData = {
	title: 'Posts',
	description: 'be written'
}
---

<Page title={metaData.title} description={metaData.description} >
	<div class="content-wrapper blog-page-wrapper" data-pagefind-ignore>
	<PageFind />
	<PostTable client:load posts={filteredPosts}>
	</div>
</Page>


